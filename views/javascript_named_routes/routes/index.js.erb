var Routes = (function() {
  var _ = {};
  
  var route = function(segments, keys) {
    return function() {
      // build params object from arguments
      var params = {};
      var n = arguments.length;
      if (typeof arguments[n-1] == 'object') {
        var kwargs = arguments[n-1];
        for (var k in kwargs) {
          if (kwargs.hasOwnProperty(k)) {
            params[k] = kwargs[k];
          }
        }
        n--;
      }
      for (var i = 0; i < n; i++) {
        params[keys[i]] = arguments[i];
      }
      
      var path = [];
      
      // build path component of URI from route segments
      var pi = 0;
      for (var i = 0; i < segments.length; i++) {
        if (segments[i] == _) {
          var k = keys[pi++];
          path.push(encodeURIComponent(params[k]));
          delete params[k];
        } else {
          path.push(segments[i]);
        }
      }
      
      // add the format, if provided
      if (params.format) {
        path.push('.');
        path.push(params.format);
        delete params.format;
      }
      
      // put any extra params in the query string
      var separator = '?';
      for (var k in params) {
        if (params.hasOwnProperty(k)) {
          path.push(separator);
          path.push(k);
          path.push('=');
          path.push(encodeURIComponent(params[k]));
          separator = '&';
        }
      }
      
      return path.join('');
    };
  };
  
  return {
  <% separator = '' -%>
  <% for name, segments, keys in @route_data %>
    <%= separator %><%= name %>: route(<%= segments %>, <%= keys %>)<% separator = ',' -%>
  <% end %>
  };
}());
